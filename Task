Реализовать класс Money. Продумать как хранить значение и обосновать свой выбор Пример: Money(whole:int, remains: int) # целые отдельно, остаток отдельно (рубли и копейки) Money(value:int) # значение в минимальной денежной единице (копейки, центы) Money(value:float) # значение с плавающей запятой Также добавить атрибут с названием валюты.

Реализовать:

1. Сложение экземпляров класса # Money(9, 10) + Money(1, 20) = Money(10, 30).
2. Вычитание экземпляров.
3. Умножение/деление экземпляра на число.
4. Реализовать операции сравнения.
5. Реализовать метод класса convert_to_usd() -> Money(value in usd)
6. Реализовать метод класса convert_to_valute(valute:str) -> Money(value in valute) Валюта должна конвертироваться по текущему курсу ЦБ.
7. Кэширование последних кусров при запуске скрипта, если интернет отключен, брать значение для конвертации из кэша. (json, sqlite, pickle и т.д.)
8 *Хранить дату последнего обновления хэша
Требования:

Докстринги;
1.Типизация;
2. Проверка типов;
3. Соответствие pep8;
4. Небольшой сценарий использования базового класса;
5. Создать дочерний класс, конкретной валюты; 7*. Тестирование.
ХАЛП:

При реализации вспомнить переопределение "магических" методов для сравнения объектов.
Получение курса с ЦБ гуглится за 10-15 минут. Используем библиотеку requests.